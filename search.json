[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello! I’m Tyler Brown, a Statistics & Data Analytics major at the University of Nebraska-Lincoln. Welcome to my sports blog! I’m passionate about data analysis across all sports, with a particular focus on the NFL. Through this blog, I aim to share my insights and explore the fascinating ways data can deepen our understanding of sports."
  },
  {
    "objectID": "posts/2008-Lions-vs-2017-Browns/index.html",
    "href": "posts/2008-Lions-vs-2017-Browns/index.html",
    "title": "Lions vs Browns",
    "section": "",
    "text": "The 0-16 Lions in were atrocious, but so were the 0-16 Browns in 2017.\n\n\nCode\nlibrary(tidyverse)\nlibrary(nflfastR)\nlibrary(patchwork)\nlibrary(waffle)\npbp2008 &lt;- nflfastR::load_pbp(2008)\npbp2017 &lt;- nflfastR::load_pbp(2017)\n\n\n\n\nCode\nRushingYards2008 &lt;- pbp2008 |&gt;\n  group_by(game_id, home_team, away_team) |&gt;\n  summarise(\n    home_rushing_yards2008 = sum(rushing_yards[posteam_type == \"home\"], na.rm = TRUE),\n    away_rushing_yards2008 = sum(rushing_yards[posteam_type == \"away\"], na.rm = TRUE)\n  )\n\n\n`summarise()` has grouped output by 'game_id', 'home_team'. You can override\nusing the `.groups` argument.\n\n\nCode\ntotal_rushing2008 &lt;- RushingYards2008 |&gt;\n  summarise(\n    team = home_team,\n    total_rushing_yards2008 = sum(home_rushing_yards2008, na.rm = TRUE)\n  ) |&gt;\n  bind_rows(\n    RushingYards2008 |&gt;\n      summarise(\n        team = away_team,\n        total_rushing_yards2008 = sum(away_rushing_yards2008, na.rm = TRUE)\n      )\n  ) |&gt;\n  group_by(team) |&gt;\n  summarise(total_rushing_yards2008 = sum(total_rushing_yards2008, na.rm = TRUE)) |&gt;\n  arrange(total_rushing_yards2008)\n\n\n`summarise()` has grouped output by 'game_id'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'game_id'. You can override using the\n`.groups` argument.\n\n\nCode\naverage_rushing_yards2008 &lt;- mean(total_rushing2008$total_rushing_yards2008)\n\n\n\n\nCode\nRushingYards2017 &lt;- pbp2017 |&gt;\n  group_by(game_id, home_team, away_team) |&gt;\n  summarise(\n    home_rushing_yards2017 = sum(rushing_yards[posteam_type == \"home\"], na.rm = TRUE),\n    away_rushing_yards2017 = sum(rushing_yards[posteam_type == \"away\"], na.rm = TRUE)\n  )\n\n\n`summarise()` has grouped output by 'game_id', 'home_team'. You can override\nusing the `.groups` argument.\n\n\nCode\ntotal_rushing2017 &lt;- RushingYards2017 |&gt;\n  summarise(\n    team = home_team,\n    total_rushing_yards2017 = sum(home_rushing_yards2017, na.rm = TRUE)\n  ) |&gt;\n  bind_rows(\n    RushingYards2017 |&gt;\n      summarise(\n        team = away_team,\n        total_rushing_yards2017 = sum(away_rushing_yards2017, na.rm = TRUE)\n      )\n  ) |&gt;\n  group_by(team) |&gt;\n  summarise(total_rushing_yards2017 = sum(total_rushing_yards2017, na.rm = TRUE)) |&gt;\n  arrange(total_rushing_yards2017)\n\n\n`summarise()` has grouped output by 'game_id'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'game_id'. You can override using the\n`.groups` argument.\n\n\nCode\naverage_rushing_yards2017 &lt;- mean(total_rushing2017$total_rushing_yards2017)\n\n\n\n\nCode\nLions2008RushingYards &lt;- total_rushing2008 |&gt;\n  filter(team == \"DET\")\n\nBrowns2017RushingYards &lt;- total_rushing2017 |&gt;\n  filter(team == \"CLE\")\n\ncolnames(Lions2008RushingYards)[2] &lt;- 'total_rushing_yards'\ncolnames(Browns2017RushingYards)[2] &lt;- 'total_rushing_yards'\n\n\nBrownsLionsRushingYards &lt;- rbind(Lions2008RushingYards, Browns2017RushingYards)\n\n\n\n\nCode\nRushingBar &lt;- ggplot(data = BrownsLionsRushingYards, aes(x = team, y = total_rushing_yards)) +\n  geom_bar(stat = \"identity\", fill = \"#FF3C00\", width = 0.5) +\n  geom_bar(data = Lions2008RushingYards, aes(x = team, y = total_rushing_yards), stat = \"identity\", fill = \"#0076B6\", width = 0.5) +\n  scale_x_discrete(\n    breaks = c(\"DET\", \"CLE\"),\n    labels = c(\"2008 Lions\", \" 2017 Browns\")\n  ) +\n  labs(x = \"Team\", y = \"Season Rushing Yards\", title = \"2008 Lions lag behind 2017 Browns in rushing yards\", subtitle = \"Detroit falls even further down than Cleveland in rushing yards\", caption = \"By: Tyler Brown | Source: nflfastR\") +\n  geom_hline(yintercept = 1870.719, linetype = \"dashed\", color = \"black\", size = 1) +\n  geom_text(aes(x = 1.5, y = 1870.719 + 60, label = \"Average Between 2008 & 2017 Season\"), \n            color = \"grey\", size = 5, hjust = 0.5) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 17))\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\nCode\nPassingYards2008 &lt;- pbp2008 |&gt;\n  group_by(game_id, home_team, away_team) |&gt;\n  summarise(\n    home_passing_yards2008 = sum(passing_yards[posteam_type == \"home\"], na.rm = TRUE),\n    away_passing_yards2008 = sum(passing_yards[posteam_type == \"away\"], na.rm = TRUE)\n  )\n\n\n`summarise()` has grouped output by 'game_id', 'home_team'. You can override\nusing the `.groups` argument.\n\n\nCode\ntotal_passing2008 &lt;- PassingYards2008 |&gt;\n  summarise(\n    team = home_team,\n    total_passing_yards2008 = sum(home_passing_yards2008, na.rm = TRUE)\n  ) |&gt;\n  bind_rows(\n    PassingYards2008 |&gt;\n      summarise(\n        team = away_team,\n        total_passing_yards2008 = sum(away_passing_yards2008, na.rm = TRUE)\n      )\n  ) |&gt;\n  group_by(team) |&gt;\n  summarise(total_passing_yards2008 = sum(total_passing_yards2008, na.rm = TRUE)) |&gt;\n  arrange(total_passing_yards2008)\n\n\n`summarise()` has grouped output by 'game_id'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'game_id'. You can override using the\n`.groups` argument.\n\n\nCode\naverage_passing_yards2008 &lt;- mean(total_passing2008$total_passing_yards2008)\n\n\n\n\nCode\nPassingYards2017 &lt;- pbp2017 |&gt;\n  group_by(game_id, home_team, away_team) |&gt;\n  summarise(\n    home_passing_yards2017 = sum(passing_yards[posteam_type == \"home\"], na.rm = TRUE),\n    away_passing_yards2017 = sum(passing_yards[posteam_type == \"away\"], na.rm = TRUE)\n  )\n\n\n`summarise()` has grouped output by 'game_id', 'home_team'. You can override\nusing the `.groups` argument.\n\n\nCode\ntotal_passing2017 &lt;- PassingYards2017 |&gt;\n  summarise(\n    team = home_team,\n    total_passing_yards2017 = sum(home_passing_yards2017, na.rm = TRUE)\n  ) |&gt;\n  bind_rows(\n    PassingYards2017 |&gt;\n      summarise(\n        team = away_team,\n        total_passing_yards2017 = sum(away_passing_yards2017, na.rm = TRUE)\n      )\n  ) |&gt;\n  group_by(team) |&gt;\n  summarise(total_passing_yards2017 = sum(total_passing_yards2017, na.rm = TRUE)) |&gt;\n  arrange(total_passing_yards2017)\n\n\n`summarise()` has grouped output by 'game_id'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'game_id'. You can override using the\n`.groups` argument.\n\n\nCode\naverage_passing_yards2017 &lt;- mean(total_passing2017$total_passing_yards2017)\n\n\n\n\nCode\nLions2008passingYards &lt;- total_passing2008 |&gt;\n  filter(team == \"DET\")\n\nBrowns2017passingYards &lt;- total_passing2017 |&gt;\n  filter(team == \"CLE\")\n\ncolnames(Lions2008passingYards)[2] &lt;- 'total_passing_yards'\ncolnames(Browns2017passingYards)[2] &lt;- 'total_passing_yards'\n\n\nBrownsLionspassingYards &lt;- rbind(Lions2008passingYards, Browns2017passingYards)\n\n\n\n\nCode\nPassingBar &lt;- ggplot(data = BrownsLionspassingYards, aes(x = team, y = total_passing_yards)) +\n  geom_bar(stat = \"identity\", fill = \"#FF3C00\", width = 0.5) +\n  geom_bar(data = Lions2008passingYards, aes(x = team, y = total_passing_yards), stat = \"identity\", fill = \"#0076B6\", width = 0.5) +\n  scale_x_discrete(\n    breaks = c(\"DET\", \"CLE\"),\n    labels = c(\"2008 Lions\", \" 2017 Browns\")\n  ) +\n  labs(x = \"Team\", y = \"Season passing Yards\", title = \"The 2008 Lions Struggle in Passing Yards, Mirror Their Rushing Woes\", subtitle = \"Detroit lags behind once again in passing yards\", caption = \"By: Tyler Brown | Source: nflfastR\") +\n  geom_hline(yintercept = 3891.9845, linetype = \"dashed\", color = \"black\", size = 1) +\n  geom_text(aes(x = 1.5, y = 3891.9845 + 95, label = \"Average Between 2008 & 2017 Season\"), \n            color = \"grey\", size = 5, hjust = 0.5) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 17))\n\n\n\n\nCode\nRushingBar + PassingBar\n\n\nWarning in geom_text(aes(x = 1.5, y = 1870.719 + 60, label = \"Average Between 2008 & 2017 Season\"), : All aesthetics have length 1, but the data has 2 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\nWarning in geom_text(aes(x = 1.5, y = 3891.9845 + 95, label = \"Average Between 2008 & 2017 Season\"), : All aesthetics have length 1, but the data has 2 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\n\n\nCode\nLions2008Turnovers &lt;- c(\"Turnovers Recovered\" = 20, \"Turnovers Committed\" = 35)\nBrowns2017Turnovers &lt;- c(\"Turnovers Recovered\" = 13, \"Turnovers Committed\" = 37, 5 )\n\n\n\n\nCode\niron(\n waffle(Lions2008Turnovers, \n        rows = 5, \n        title=\"2008 Lions Turnovers\", \n        xlab=\"1 square = 1 turnover\", \n        colors = c(\"green\", \"red\")\n        ),\n waffle(Browns2017Turnovers, \n        rows = 5, \n        title=\"2017 Browns Turnovers\", \n        xlab=\"1 square = 1 turnover\", \n        colors = c(\"green\", \"red\", \"white\")\n        )\n)\n\n\n\n\n\n\n\n\n\nCode\n# Create the waffle plots for each team\nwaffle_Lions &lt;- waffle(Lions2008Turnovers, \n                      rows = 5, \n                      title = \"2008 Lions Turnovers\", \n                      xlab = \"1 square = 1 turnover\", \n                      colors = c(\"green\", \"red\"))\n\nwaffle_Browns &lt;- waffle(Browns2017Turnovers, \n                      rows = 5, \n                      title = \"2017 Browns Turnovers\", \n                      xlab = \"1 square = 1 turnover\", \n                      colors = c(\"green\", \"red\", \"white\"))\n\ncombined_waffle &lt;- waffle_Lions + waffle_Browns + \n  plot_annotation(\n    title = \"2017 Browns defeated by their turnover differential\",\n    subtitle = \"Cleveland in '17 had a worse turnover differential than Detroit in '08\",\n    caption = \"By: Tyler Brown | Source: nfl.com\")\n\n\n\n\nCode\nPointsData &lt;- read_csv(\"FiveThirtyEight.csv\")\n\n\nRows: 12830 Columns: 41\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (13): playoff, tm_nano, tm_market, tm_name, tm_alias, tm_alt_alias, opp...\ndbl  (27): season, neutral, tm_score, opp_score, tm_elo_pre, opp_elo_pre, tm...\ndate  (1): event_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nLessColumnsPointsData &lt;- PointsData |&gt;\n  select(event_date, season, tm_name, opp_name, tm_score, opp_score)\n\nPointsDataLionsBrowns &lt;- LessColumnsPointsData |&gt;\n  rename(Week = event_date) |&gt;\n  filter(\n    (season == 2008 & (tm_name == \"Lions\" | opp_name == \"Lions\")) |\n    (season == 2017 & (tm_name == \"Browns\" | opp_name == \"Browns\"))\n  )\n\nPointsDataLions &lt;- PointsDataLionsBrowns |&gt;\n  filter(season == 2008) |&gt;\n  mutate(Week = row_number())\n\nPointsDataBrowns &lt;- PointsDataLionsBrowns |&gt;\n  filter(season == 2017) |&gt;\n  mutate(Week = row_number())\n\n\nPointsDataLionsNew &lt;- PointsDataLions |&gt;\n  mutate(\n    Lions_Points_Scored = case_when(\n      tm_name == \"Lions\" ~ tm_score,\n      opp_name == \"Lions\" ~ opp_score,\n    ),\n    Lions_Points_Allowed = case_when(\n      tm_name == \"Lions\" ~ opp_score,\n      opp_name == \"Lions\" ~ tm_score,\n    )\n  )\n\nChartReadyLionsData &lt;- PointsDataLionsNew |&gt;\n  mutate(Team = \"Lions\") |&gt;\n  select(Week, Team, Lions_Points_Scored, Lions_Points_Allowed)\n\n\n\n\n\nPointsDataBrownsNew &lt;- PointsDataBrowns |&gt;\n  mutate(\n    Browns_Points_Scored = case_when(\n      tm_name == \"Browns\" ~ tm_score,\n      opp_name == \"Browns\" ~ opp_score,\n    ),\n    Browns_Points_Allowed = case_when(\n      tm_name == \"Browns\" ~ opp_score,\n      opp_name == \"Browns\" ~ tm_score,\n    )\n  )\n\nChartReadyBrownsData &lt;- PointsDataBrownsNew |&gt;\n  mutate(Team = \"Browns\") |&gt;\n  select(Week, Team, Browns_Points_Scored, Browns_Points_Allowed)\n\n\n\n\nCode\n# Reshape data into long format for easier handling in ggplot\nChartReadyLionsData_Long &lt;- ChartReadyLionsData |&gt;\n  pivot_longer(cols = c(Lions_Points_Scored, Lions_Points_Allowed), \n               names_to = \"Category\", \n               values_to = \"Points\")\n\n# Create the plot\nggplot(ChartReadyLionsData_Long, aes(x = Week, y = Points, color = Category)) + \n  geom_line() + \n  scale_y_continuous(limits = c(0, 50), breaks = seq(0, 50, by = 5)) +\n  scale_x_continuous(breaks = 1:16) +\n  scale_color_manual(values = c(\"Lions_Points_Scored\" = \"chartreuse4\", \n                                \"Lions_Points_Allowed\" = \"red\"),\n                     labels = c(\"Points Allowed\", \"Points Scored\")) +\n  theme_minimal() +\n  labs(title = \"Line Plot with Legend\", \n       subtitle = \"Subtitle stuff\", \n       caption = \"By: Tyler Brown | Source: nflscraPy\", \n       x = \"Week\", \n       y = \"Points\", \n       color = \"\")\n\n\n\n\n\n\n\n\n\nCode\nChartReadyBrownsData_Long &lt;- ChartReadyBrownsData |&gt;\n  pivot_longer(cols = c(Browns_Points_Scored, Browns_Points_Allowed), \n               names_to = \"Category\", \n               values_to = \"Points\")\n\n# Create the plot\nggplot(ChartReadyBrownsData_Long, aes(x = Week, y = Points, color = Category)) + \n  geom_line() + \n  scale_y_continuous(limits = c(0, 50), breaks = seq(0, 50, by = 5)) +\n  scale_x_continuous(breaks = 1:16) +\n  scale_color_manual(values = c(\"Browns_Points_Scored\" = \"chartreuse4\", \n                                \"Browns_Points_Allowed\" = \"red\"),\n                     labels = c(\"Points Allowed\", \"Points Scored\")) +\n  theme_minimal() +\n  labs(title = \"Line Plot with Legend\", \n       subtitle = \"Subtitle stuff\", \n       caption = \"By: Tyler Brown | Source: nflscraPy\", \n       x = \"Week\", \n       y = \"Points\", \n       color = \"\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TylerSportsBlog",
    "section": "",
    "text": "Lions vs Browns\n\n\n\n\n\n\nNFL\n\n\n\n\n\n\n\n\n\nNov 17, 2024\n\n\nTyler Brown\n\n\n\n\n\n\nNo matching items"
  }
]